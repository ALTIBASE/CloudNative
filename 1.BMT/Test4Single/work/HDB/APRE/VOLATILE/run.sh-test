#!/bin/sh

HOST="localhost"
if [ "$ALTIBASE_PORT_NO" ];
then
    PORT=$ALTIBASE_PORT_NO
else
    PORT="20300"
fi
CONNTYPE="2"

BMT_IS=(50 50)
BMT_SU=(50 50)
BMT_ISU=(25 50 25)
THREADS="1 8 16 32 64"
THREADS_COUNT="5"
THRESHOLD="1000000"
UNIT="1000"
CAP="0"
USER="SYS"
PASSWORD="MANAGER"
OPTION="DSN=$HOST;PORT_NO=$PORT;CONNTYPE=$CONNTYPE"
RECORDS="1000000"

./configure.sh
make clean
make
echo

case $CONNTYPE in
    "1" )
        export ISQL_CONNECTION="TCP"
        ;;
    "2" )
        export ISQL_CONNECTION="UNIX"
        ;;
    "3" )
        export ISQL_CONNECTION="IPC"
        ;;
esac
isql -s $HOST -u $USER -p $PASSWORD -port $PORT -f schema.sql
echo

START="0"
for THREAD in $THREADS
do
isql -s $HOST -u $USER -p $PASSWORD -port $PORT -f checkpoint.sql
sleep 10
./bmt_insert $THREAD $START $RECORDS $UNIT $THRESHOLD $CAP $USER $PASSWORD $OPTION
START=`expr $START + $RECORDS`
done

START="0"
for THREAD in $THREADS
do
isql -s $HOST -u $USER -p $PASSWORD -port $PORT -f checkpoint.sql
sleep 10
./bmt_select $THREAD $START $RECORDS $UNIT $THRESHOLD $CAP $USER $PASSWORD $OPTION
START=`expr $START + $RECORDS`
done

START="0"
for THREAD in $THREADS
do
isql -s $HOST -u $USER -p $PASSWORD -port $PORT -f checkpoint.sql
sleep 10
./bmt_update $THREAD $START $RECORDS $UNIT $THRESHOLD $CAP $USER $PASSWORD $OPTION
START=`expr $START + $RECORDS`
done

let START1=$RECORDS*$THREADS_COUNT
START2="0"
for THREAD in $THREADS
do
if [ $THREAD -eq 1 ]
then
echo "Thread Count is 1"
else
let THREAD1=$THREAD*${BMT_IS[0]}/100
let THREAD2=$THREAD*${BMT_IS[1]}/100
let RECORDS1=$RECORDS*${BMT_IS[0]}/100
let RECORDS2=$RECORDS*${BMT_IS[1]}/100
isql -s $HOST -u $USER -p $PASSWORD -port $PORT -f checkpoint.sql
sleep 10
./bmt_insert $THREAD1 $START1 $RECORDS1 $UNIT $THRESHOLD $CAP $USER $PASSWORD $OPTION &
./bmt_select $THREAD1 $START2 $RECORDS2 $UNIT $THRESHOLD $CAP $USER $PASSWORD $OPTION &
wait
START1=`expr $START1 + $RECORDS1`
START2=`expr $START2 + $RECORDS2`
fi
done

START1="0"
let START2=$RECORDS*$THREADS_COUNT
for THREAD in $THREADS
do
if [ $THREAD -eq 1 ]
then
echo "Thread Count is 1"
else
let THREAD1=$THREAD*${BMT_SU[0]}/100
let THREAD2=$THREAD*${BMT_SU[1]}/100
let RECORDS1=$RECORDS*${BMT_SU[0]}/100
let RECORDS2=$RECORDS*${BMT_SU[1]}/100
isql -s $HOST -u $USER -p $PASSWORD -port $PORT -f checkpoint.sql
sleep 10
./bmt_select $THREAD1 $START1 $RECORDS1 $UNIT $THRESHOLD $CAP $USER $PASSWORD $OPTION &
./bmt_update $THREAD2 $START2 $RECORDS2 $UNIT $THRESHOLD $CAP $USER $PASSWORD $OPTION &
wait
START1=`expr $START1 + $RECORDS1`
START2=`expr $START2 + $RECORDS1`
fi
done

let START1=$RECORDS*$THREADS_COUNT*2
let START2=$RECORDS*$THREADS_COUNT
START3="0"
for THREAD in $THREADS
do
if [ $THREAD -eq 1 ]
then
echo "Thread Count is 1"
else
let THREAD1=$THREAD*${BMT_ISU[0]}/100
let THREAD2=$THREAD*${BMT_ISU[1]}/100
let THREAD3=$THREAD*${BMT_ISU[2]}/100
let RECORDS1=$RECORDS*${BMT_ISU[0]}/100
let RECORDS2=$RECORDS*${BMT_ISU[1]}/100
let RECORDS3=$RECORDS*${BMT_ISU[2]}/100
isql -s $HOST -u $USER -p $PASSWORD -port $PORT -f checkpoint.sql
sleep 10
./bmt_insert $THREAD1 $START1 $RECORDS1 $UNIT $THRESHOLD $CAP $USER $PASSWORD $OPTION &
./bmt_select $THREAD2 $START2 $RECORDS2 $UNIT $THRESHOLD $CAP $USER $PASSWORD $OPTION &
./bmt_update $THREAD3 $START3 $RECORDS3 $UNIT $THRESHOLD $CAP $USER $PASSWORD $OPTION &
wait
START1=`expr $START1 + $RECORDS1`
START2=`expr $START2 + $RECORDS2`
START3=`expr $START3 + $RECORDS3`
fi
done

START="0"
for THREAD in $THREADS
do
isql -s $HOST -u $USER -p $PASSWORD -port $PORT -f checkpoint.sql
sleep 10
./bmt_delete $THREAD $START $RECORDS $UNIT $THRESHOLD $CAP $USER $PASSWORD $OPTION
START=`expr $START + $RECORDS`
done

isql -s $HOST -u $USER -p $PASSWORD -port $PORT -f drop.sql
